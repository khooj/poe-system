import Config

# Configure your database
config :poe_system, PoeSystem.Repo,
  username: "khooj",
  password: "khooj",
  hostname: "localhost",
  database: "khooj",
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use it
# to bundle .js and .css sources.
# Binding to loopback ipv4 address prevents access from other machines.
config :poe_system, PoeSystemWeb.Endpoint,
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {127, 0, 0, 1}, port: 4000],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "vMKHgGP1w1R9KH19Kr9ybO7jixqFcTLFXRoj+z1P/WsrqGseIs6ilLLvR+/uO9bL",
  watchers: [
    # npx:
    #   ~w(vite build -w) ++
    #     [
    #       cd: Path.expand("../assets", __DIR__)
    #     ]
    bun:
      ~w(run tailwind --watch) ++
        [
          cd: Path.expand("../assets-daisy", __DIR__)
        ],
    bun:
      ~w(run storybook-css --watch) ++
        [
          cd: Path.expand("../assets-daisy", __DIR__)
        ],
    bun:
      ~w(run build --watch) ++
        [
          cd: Path.expand("../assets-daisy", __DIR__)
        ],
    bun:
      ~w(run storybook --watch) ++
        [
          cd: Path.expand("../assets-daisy", __DIR__)
        ]
    # npm: ~w(run tsc_watch) ++  [
    #   cd: Path.expand("../assets", __DIR__)
    # ]
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :poe_system, PoeSystemWeb.Endpoint,
  live_reload: [
    notify: [
      live_view: []
    ],
    patterns: [
      ~r"priv/static/(?!uploads/).*(js|css|png|jpeg|jpg|gif|svg|wasm)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/poe_system_web/controllers/.*(ex|heex)$",
      ~r"lib/poe_system_web/components/components.ex$",
      ~r"lib/poe_system_web/(live|components)/.*(ex|heex)$",
      ~r"storybook/.*(exs)$"
    ]
  ]

# config :phoenix_live_reload,
#   dirs: [
#     "priv/static",
#     "priv/gettext",
#     "lib/poe_system_web/live"
#   ]

# Enable dev routes for dashboard and mailbox
config :poe_system,
  dev_routes: true,
  additional_processes: []

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

config :phoenix_live_view,
  # Include HEEx debug annotations as HTML comments in rendered markup
  debug_heex_annotations: true,
  # Enable helpful, but potentially expensive runtime checks
  enable_expensive_runtime_checks: true

config :poe_system, PoeSystem.StashReceiver, disabled: true
